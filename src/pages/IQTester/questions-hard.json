[
    {
        "question": "What is the time complexity of quicksort algorithm?",
        "optionA": "O(n^2)",
        "optionB": "O(n log n)",
        "optionC": "O(log n)",
        "optionD": "O(1)",
        "answer": "O(n log n)"
    },
    {
        "question": "'volatile' keyword in Java?",
        "optionA": "Cannot change variable",
        "optionB": "Heap memory variable",
        "optionC": "Thread-safe variable",
        "optionD": "Shared variable",
        "answer": "Shared variable"
    },
    {
        "question": "JavaScript closure?",
        "optionA": "Automatic event function",
        "optionB": "Function arg function",
        "optionC": "Access outer scope vars",
        "optionD": "Function inside function",
        "answer": "Access outer scope vars"
    },
    {
        "question": "'yield' keyword in Python?",
        "optionA": "Raise exception",
        "optionB": "Define generator",
        "optionC": "Create coroutine",
        "optionD": "Pause and resume generator",
        "answer": "Pause and resume generator"
    },
    {
        "question": "Python closure?",
        "optionA": "Automatic event function",
        "optionB": "Function arg function",
        "optionC": "Access enclosing scope vars",
        "optionD": "Function inside function",
        "answer": "Access enclosing scope vars"
    },
    {
        "question": "'const' keyword in C++?",
        "optionA": "Constant variable",
        "optionB": "Heap memory variable",
        "optionC": "Thread-safe variable",
        "optionD": "Shared variable",
        "answer": "Constant variable"
    },
    {
        "question": "'async' keyword in JavaScript?",
        "optionA": "Returns Promise",
        "optionB": "Automatic event function",
        "optionC": "Awaitable function",
        "optionD": "Function inside function",
        "answer": "Awaitable function"
    },
    {
        "question": "'finally' block in Java try-catch-finally?",
        "optionA": "Catch and handle exceptions",
        "optionB": "Always executed block",
        "optionC": "Exception handling block",
        "optionD": "Non-exception handling block",
        "answer": "Always executed block"
    },
    {
        "question": "'extends' keyword in Java?",
        "optionA": "Define subclass",
        "optionB": "Define interface",
        "optionC": "Define static method",
        "optionD": "Define constant variable",
        "answer": "Define subclass"
    },
    {
        "question": "What is the time complexity of mergesort algorithm?",
        "optionA": "O(n^2)",
        "optionB": "O(n log n)",
        "optionC": "O(log n)",
        "optionD": "O(1)",
        "answer": "O(n log n)"
    },
    {
        "question": "'static' keyword in C++?",
        "optionA": "Cannot change variable",
        "optionB": "Stack memory variable",
        "optionC": "Class-level variable",
        "optionD": "Thread-safe variable",
        "answer": "Class-level variable"
    },
    {
        "question": "Inheritance in object-oriented programming?",
        "optionA": "Reusing code",
        "optionB": "Function overloading",
        "optionC": "Runtime polymorphism",
        "optionD": "Creating objects",
        "answer": "Reusing code"
    },
    {
        "question": "What is a priority queue?",
        "optionA": "First-in, first-out (FIFO) queue",
        "optionB": "Last-in, first-out (LIFO) queue",
        "optionC": "Queue with highest priority item dequeued first",
        "optionD": "Queue with lowest priority item dequeued first",
        "answer": "Queue with highest priority item dequeued first"
    },
    {
        "question": "What is a binary search tree?",
        "optionA": "Tree with at most two children for each node",
        "optionB": "Tree with at least two children for each node",
        "optionC": "Tree with arbitrary number of children for each node",
        "optionD": "Tree with no children",
        "answer": "Tree with at most two children for each node"
    },
    {
        "question": "What is a hash table?",
        "optionA": "Data structure that maintains elements in sorted order",
        "optionB": "Data structure that maintains elements in reverse sorted order",
        "optionC": "Data structure that uses a hash function to map keys to values",
        "optionD": "Data structure that represents a collection of items",
        "answer": "Data structure that uses a hash function to map keys to values"
    },
    {
        "question": "What is an abstract class in Java?",
        "optionA": "A class that cannot be instantiated",
        "optionB": "A class that can be instantiated",
        "optionC": "A class that contains only abstract methods",
        "optionD": "A class that contains only concrete methods",
        "answer": "A class that contains only abstract methods"
    },
    {
        "question": "What is the difference between stack and queue?",
        "optionA": "Stack follows First-in, first-out (FIFO) order",
        "optionB": "Queue follows Last-in, first-out (LIFO) order",
        "optionC": "Stack follows Last-in, first-out (LIFO) order",
        "optionD": "Queue follows First-in, first-out (FIFO) order",
        "answer": "Queue follows First-in, first-out (FIFO) order"
    },
    {
        "question": "What is the purpose of a constructor in object-oriented programming?",
        "optionA": "Object Initialization",
        "optionB": "Class Definition",
        "optionC": "Method Overloading",
        "optionD": "Code Reusability",
        "answer": "Object Initialization"
    },
    {
        "question": "What is the purpose of the 'break' statement in a loop in programming?",
        "optionA": "Exit the Loop",
        "optionB": "Continue to Next Iteration",
        "optionC": "Skip Current Iteration",
        "optionD": "Terminate Program",
        "answer": "Exit the Loop"
    },
    {
        "question": "What is the purpose of the 'try-catch' block in exception handling?",
        "optionA": "Error Reporting",
        "optionB": "Code Execution",
        "optionC": "Error Handling",
        "optionD": "Code Compilation",
        "answer": "Error Handling"
    },
    {
        "question": "What is the purpose of the 'git' command in version control systems?",
        "optionA": "Commit Changes",
        "optionB": "Pull Changes",
        "optionC": "Push Changes",
        "optionD": "Merge Branches",
        "answer": "Commit Changes"
    },
    {
        "question": "What is the purpose of the 'map' function in functional programming?",
        "optionA": "Filter Elements",
        "optionB": "Transform Elements",
        "optionC": "Reduce Elements",
        "optionD": "Iterate over Elements",
        "answer": "Transform Elements"
    },
    {
        "question": "What is the purpose of the 'index' in a database?",
        "optionA": "Unique Identifier",
        "optionB": "Data Storage",
        "optionC": "Data Retrieval",
        "optionD": "Data Manipulation",
        "answer": "Unique Identifier"
    },
    {
        "question": "What is the purpose of the 'super' keyword in Java?",
        "optionA": "Access parent class properties",
        "optionB": "Access child class properties",
        "optionC": "Access grandparent class properties",
        "optionD": "Access sibling class properties",
        "answer": "Access parent class properties"
    },
    {
        "question": "What is the purpose of the 'null' value in programming?",
        "optionA": "Empty String",
        "optionB": "Zero Value",
        "optionC": "Undefined Value",
        "optionD": "Boolean Value",
        "answer": "Undefined Value"
    }
]